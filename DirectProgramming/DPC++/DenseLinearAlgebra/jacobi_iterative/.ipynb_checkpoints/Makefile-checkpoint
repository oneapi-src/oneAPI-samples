EXEC           := 

DPCPP          := dpcpp # /glob/development-tools/versions/oneapi/2022.1.2/oneapi/compiler/2022.0.2/linux/bin/dpcpp

#ALL_LDFLAGS    := -m64 -D__CUDACC__=1
ALL_LDFLAGS    := -m64

#ALL_CCFLAGS    := --std=c++17 ${ALL_LDFLAGS}
ALL_CCFLAGS    :=  -Wall -Wformat-security -Werror=format-security ${ALL_LDFLAGS}

LIBRARIES      := 

HOST_ARCH      := $(shell uname -m)
TARGET_ARCH    ?= $(HOST_ARCH)

HOST_OS        := $(shell uname -s 2>/dev/null | tr "[:upper:]" "[:lower:]")
TARGET_OS      ?= $(HOST_OS)

# Debug build flags
ifeq ($(dbg),1)
      ALL_CCFLAGS += -g -G
      BUILD_TYPE  := debug
else
      BUILD_TYPE  := release
endif

################################################################################

# Target rules
all: build

build: jacobiSYCL

jacobi.o: src/jacobi.cpp
	$(EXEC) $(DPCPP) $(INCLUDES) $(ALL_CCFLAGS) -o $@ -c $<

main.o: src/main.cpp
	$(EXEC) $(DPCPP) $(INCLUDES) $(ALL_CCFLAGS) -o $@ -c $<

jacobiSYCL: jacobi.o main.o
	$(EXEC) $(DPCPP) $(ALL_LDFLAGS) -o $@ $+ $(LIBRARIES)
	$(EXEC) mkdir -p ../../bin/$(TARGET_ARCH)/$(TARGET_OS)/$(BUILD_TYPE)
	$(EXEC) cp $@ ../../bin/$(TARGET_ARCH)/$(TARGET_OS)/$(BUILD_TYPE)

runGPU: build
	$(EXEC)  SYCL_DEVICE_FILTER=gpu ./jacobiSYCL

runCPU: build
	$(EXEC)  SYCL_DEVICE_FILTER=cpu ./jacobiSYCL 
    
run: runGPU

clean:
	rm -f jacobiSYCL jacobi.o main.o
	rm -rf ../../bin/$(TARGET_ARCH)/$(TARGET_OS)/$(BUILD_TYPE)/jacobiSYCL

clobber: clean


# dpcpp -c -m64 --std=c++17 -o jacobi.o -D__CUDACC__=1 src/jacobi.cpp
# dpcpp -c -m64 --std=c++17 -o main.o -D__CUDACC__=1 src/main.cpp
# dpcpp -m64 -o jacobiSYCL jacobi.o main.o -D__CUDACC__=1