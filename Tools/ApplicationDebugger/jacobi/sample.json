{
  "guid": "CFAC8EF8-E362-4054-ABE3-A04EEBEBCB46",
  "name": "Jacobi",
  "categories": ["Toolkit/oneAPI Tools/Application Debugger"],
  "description": "A small SYCL (C++) example which solves a harcoded linear system with Jacobi iteration. The sample includes two versions of the same program: with and without bugs.",
  "toolchain": ["icpx"],
  "dependencies": ["debugger"],
  "languages": [{"cpp":{}}],
  "targetDevice": ["CPU", "GPU"],
  "os": ["linux"],
  "builder": ["ide", "cmake"],
  "ciTests": {
    "linux": [
      {
        "id": "cpu-bugged",
        "steps": [
          "mkdir -p build_cpu_bugged; cd build_cpu_bugged; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=*:cpu ./jacobi-bugged",
          "make clean"
        ]
      },
      {
        "id": "gpu-bugged",
        "steps": [
          "mkdir -p build_gpu_bugged; cd build_gpu_bugged; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=level_zero:gpu ./jacobi-bugged",
          "make clean"
        ]
      },
      {
        "id": "fpga-emu-bugged",
        "steps": [
          "mkdir -p build_acc_bugged; cd build_acc_bugged; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=*:fpga ./jacobi-bugged",
          "make clean"
        ]
      },
      {
        "id": "cpu-fixed",
        "steps": [
          "mkdir -p build_cpu_fixed; cd build_cpu_fixed; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=*:cpu ./jacobi-fixed",
          "make clean"
        ]
      },
      {
        "id": "gpu-fixed",
        "steps": [
          "mkdir -p build_gpu_fixed; cd build_gpu_fixed; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=level_zero:gpu ./jacobi-fixed",
          "make clean"
        ]
      },
      {
        "id": "fpga-emu-fixed",
        "steps": [
          "mkdir -p build_acc_fixed; cd build_acc_fixed; cmake ..",
          "make",
          "ONEAPI_DEVICE_SELECTOR=*:fpga ./jacobi-fixed",
          "make clean"
        ]
      }
    ]
  },
  "expertise": "Concepts and Functionality"
}
