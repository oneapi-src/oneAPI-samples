{
  "guid": "17B9CB18-EAC1-4D08-8BBE-96F5D777C303",
  "name": "tbb-resumable-tasks-sycl",
  "categories": ["Toolkit/IntelÂ® oneAPI Base Toolkit/oneTBB"],
  "toolchain": ["dpcpp"],
  "description": "This sample illustrates how computational kernel can be split for execution between CPU and GPU using TBB resumable task and parallel_for. The TBB resumable task uses SYCL to implement calculations on GPU while the parallel_for algorithm does CPU part of calculations. This tbb-resumable-tasks-sycl sample code is implemented using C++ and SYCL language for CPU and GPU.",
  "languages": [{"cpp":{}}],
  "targetDevice": ["CPU", "GPU"],
  "os":["linux", "windows"],
  "builder": ["ide", "cmake"],
  "ciTests": {
      "linux": [{
          "steps": [
              "mkdir build",
              "cd build",
              "cmake ..",
              "make VERBOSE=1",
              "make run"
          ]
      }],
      "windows": [{
          "steps": [
              "MSBuild tbb-resumable-tasks-sycl.sln /t:Rebuild /p:Configuration=\"debug\"",
              "cd x64/Debug",
              "tbb-resumable-tasks-sycl.exe"
          ]
      }]
  }
}

